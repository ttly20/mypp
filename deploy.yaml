apps:
      - script             : ./run.sh                                                                    # 入口文件
        name               : 'ProxyPool'                                                                 # 程序名称
        env                :                                                                             # 环境变量
            COMMON_VARIABLE: true
        env_production     :
            NODE_ENV       : production
        log_date_format    : 'YYYY-MM-DD HH:mm Z'                                                        # 日志格式
        err_file           : "./logs/err.log"                                                            # 错误日志输出文件
        out_file           : "./logs/out.log"                                                            # 输出日志文件
        pid_file           : "./logs/app-pm_id.pid"                                                      # pid文件
        watch              : true                                                                        # 监视项目文件改动
        max_memory_restart : 100M                                                                        # 内存超标自动重启
        ignore_watch       : ["venv", "logs", "client/img"]                                              # 设置不监听的文件夹

deploy                     :                                                                             # 部署脚本
        production         :                                                                             # 生产环境
        ssh_options        : StrictHostKeyChecking=no                                                    # SSH 公钥检查
        repo               : https://github.com/ttly20/mypp.git                                          # 远程仓库地址
        path               : /home                                                                       # 拉取到服务器某个目录下
        pre-deploy         : git fetch --all                                                             # 部署前执行
        post-deploy        : pip install -r requirements.txt&& pm2 reload deploy.yaml --env production   # 部署后执行
        env                :
            NODE_ENV       : production
